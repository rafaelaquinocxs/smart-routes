{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Notebook Pro\\\\Documents\\\\Projetos\\\\projeto-container\\\\frontend\\\\src\\\\pages\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPage() {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const navigate = useNavigate();\n\n  // Função para verificar se o usuário é administrador\n  const checkAdminStatus = async () => {\n    const token = localStorage.getItem('authToken');\n    if (!token) {\n      alert('Você precisa estar autenticado para acessar o painel administrativo');\n      navigate('/login');\n      return;\n    }\n    const response = await fetch('http://localhost:5000/api/admin', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (response.ok) {\n      const data = await response.json();\n      setIsAdmin(data.isAdmin); // Assume que o backend retorna o status de admin\n    } else {\n      alert('Você não tem permissão para acessar esta página');\n      navigate('/devices'); // Redireciona para a página de dispositivos caso não seja admin\n    }\n  };\n  useEffect(() => {\n    checkAdminStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Painel Administrativo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Bem-vindo ao painel de administra\\xE7\\xE3o!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Voc\\xEA n\\xE3o tem permiss\\xE3o para acessar esta p\\xE1gina.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"WYQCjijwOEUEBTQ5OCjaeKqzSes=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","AdminPage","_s","isAdmin","setIsAdmin","navigate","checkAdminStatus","token","localStorage","getItem","alert","response","fetch","method","headers","Authorization","ok","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Notebook Pro/Documents/Projetos/projeto-container/frontend/src/pages/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction AdminPage() {\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Função para verificar se o usuário é administrador\r\n  const checkAdminStatus = async () => {\r\n    const token = localStorage.getItem('authToken');\r\n\r\n    if (!token) {\r\n      alert('Você precisa estar autenticado para acessar o painel administrativo');\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    const response = await fetch('http://localhost:5000/api/admin', {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      setIsAdmin(data.isAdmin); // Assume que o backend retorna o status de admin\r\n    } else {\r\n      alert('Você não tem permissão para acessar esta página');\r\n      navigate('/devices'); // Redireciona para a página de dispositivos caso não seja admin\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAdminStatus();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Painel Administrativo</h2>\r\n      {isAdmin ? (\r\n        <div>\r\n          <p>Bem-vindo ao painel de administração!</p>\r\n          {/* Aqui você pode adicionar mais funcionalidades, como gerenciar dispositivos, usuários, etc. */}\r\n        </div>\r\n      ) : (\r\n        <p>Você não tem permissão para acessar esta página.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,qEAAqE,CAAC;MAC5EL,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC9DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUR,KAAK;MAChC;IACF,CAAC,CAAC;IAEF,IAAII,QAAQ,CAACK,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCd,UAAU,CAACa,IAAI,CAACd,OAAO,CAAC,CAAC,CAAC;IAC5B,CAAC,MAAM;MACLO,KAAK,CAAC,iDAAiD,CAAC;MACxDL,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdU,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BpB,OAAO,gBACNH,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAAmB,QAAA,EAAG;MAAqC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzC,CAAC,gBAENvB,OAAA;MAAAmB,QAAA,EAAG;IAAgD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CA/CQD,SAAS;EAAA,QAECH,WAAW;AAAA;AAAA0B,EAAA,GAFrBvB,SAAS;AAiDlB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}