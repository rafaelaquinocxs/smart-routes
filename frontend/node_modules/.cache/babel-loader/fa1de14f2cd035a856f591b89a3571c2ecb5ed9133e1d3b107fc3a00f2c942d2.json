{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Notebook Pro\\\\Documents\\\\Projetos\\\\projeto-container\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    // Alterado de email para username\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Enviar dados do formulário para a API\n    const response = await fetch('http://localhost:5001/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    if (response.ok) {\n      // Armazenar o token no localStorage\n      const data = await response.json();\n      localStorage.setItem('authToken', data.token);\n      navigate('/devices'); // Redireciona para a página de dispositivos após login\n    } else {\n      alert('Credenciais inválidas. Tente novamente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\" // Alterado de email para username\n        ,\n        name: \"username\" // Alterado de email para username\n        ,\n        placeholder: \"Nome de Usu\\xE1rio\" // Alterado de E-mail para Nome de Usuário\n        ,\n        value: formData.username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Senha\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"1blQjYF89s0GhlEzbRk5f7mlRc8=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","username","password","navigate","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","token","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Notebook Pro/Documents/Projetos/projeto-container/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n  const [formData, setFormData] = useState({\r\n    username: '',  // Alterado de email para username\r\n    password: '',\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Enviar dados do formulário para a API\r\n    const response = await fetch('http://localhost:5001/api/auth/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(formData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      // Armazenar o token no localStorage\r\n      const data = await response.json();\r\n      localStorage.setItem('authToken', data.token);\r\n      navigate('/devices'); // Redireciona para a página de dispositivos após login\r\n    } else {\r\n      alert('Credenciais inválidas. Tente novamente.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"  // Alterado de email para username\r\n          name=\"username\"  // Alterado de email para username\r\n          placeholder=\"Nome de Usuário\"  // Alterado de E-mail para Nome de Usuário\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Senha\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Entrar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,QAAQ,EAAE,EAAE;IAAG;IACfC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCR,WAAW,CAAES,SAAS,KAAM;MAC1B,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAIa,QAAQ,CAACO,EAAE,EAAE;MACf;MACA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,IAAI,CAACI,KAAK,CAAC;MAC7CrB,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IACxB,CAAC,MAAM;MACLsB,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;EAED,oBACE7B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdlC,OAAA;MAAMmC,QAAQ,EAAErB,YAAa;MAAAgB,QAAA,gBAC3B9B,OAAA;QACEoC,IAAI,EAAC,MAAM,CAAE;QAAA;QACb1B,IAAI,EAAC,UAAU,CAAE;QAAA;QACjB2B,WAAW,EAAC,oBAAiB,CAAE;QAAA;QAC/B1B,KAAK,EAAER,QAAQ,CAACE,QAAS;QACzBiC,QAAQ,EAAE9B,YAAa;QACvB+B,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFlC,OAAA;QACEoC,IAAI,EAAC,UAAU;QACf1B,IAAI,EAAC,UAAU;QACf2B,WAAW,EAAC,OAAO;QACnB1B,KAAK,EAAER,QAAQ,CAACG,QAAS;QACzBgC,QAAQ,EAAE9B,YAAa;QACvB+B,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFlC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAChC,EAAA,CA7DQD,SAAS;EAAA,QAKCH,WAAW;AAAA;AAAA0C,EAAA,GALrBvC,SAAS;AA+DlB,eAAeA,SAAS;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}