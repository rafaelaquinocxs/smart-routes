{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Notebook Pro\\\\Documents\\\\Projetos\\\\projeto-container\\\\frontend\\\\src\\\\pages\\\\DevicesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../utils/axios'; // Importando o Axios configurado\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DevicesPage() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const navigate = useNavigate();\n\n  // Função para buscar dispositivos da API\n  const fetchDevices = async () => {\n    const token = localStorage.getItem('authToken'); // Pegando o token do localStorage\n\n    if (!token) {\n      alert('Você precisa estar autenticado para acessar os dispositivos');\n      navigate('/login');\n      return;\n    }\n    try {\n      const response = await api.get('/devices', {\n        headers: {\n          Authorization: `Bearer ${token}` // Passando o token para o header Authorization\n        }\n      });\n      setDevices(response.data); // Atualizando o estado com os dispositivos recebidos\n    } catch (error) {\n      alert('Erro ao buscar dispositivos');\n      console.error(error); // Exibindo o erro no console para depuração\n    }\n  };\n  useEffect(() => {\n    fetchDevices();\n  }, [fetchDevices]); // Adiciona 'fetchDevices' como dependência\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), devices.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: device.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: device.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", device.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, device._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"N\\xE3o h\\xE1 dispositivos registrados.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(DevicesPage, \"q21BdrmgRoN2Ucl5YAq0FoQ9J0s=\", false, function () {\n  return [useNavigate];\n});\n_c = DevicesPage;\nexport default DevicesPage;\nvar _c;\n$RefreshReg$(_c, \"DevicesPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","api","jsxDEV","_jsxDEV","DevicesPage","_s","devices","setDevices","navigate","fetchDevices","token","localStorage","getItem","alert","response","get","headers","Authorization","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","device","name","type","status","_id","_c","$RefreshReg$"],"sources":["C:/Users/Notebook Pro/Documents/Projetos/projeto-container/frontend/src/pages/DevicesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../utils/axios';  // Importando o Axios configurado\r\n\r\nfunction DevicesPage() {\r\n  const [devices, setDevices] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Função para buscar dispositivos da API\r\n  const fetchDevices = async () => {\r\n    const token = localStorage.getItem('authToken');  // Pegando o token do localStorage\r\n\r\n    if (!token) {\r\n      alert('Você precisa estar autenticado para acessar os dispositivos');\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await api.get('/devices', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,  // Passando o token para o header Authorization\r\n        },\r\n      });\r\n\r\n      setDevices(response.data);  // Atualizando o estado com os dispositivos recebidos\r\n    } catch (error) {\r\n      alert('Erro ao buscar dispositivos');\r\n      console.error(error);  // Exibindo o erro no console para depuração\r\n    }\r\n  };\r\n\r\n useEffect(() => {\r\n  fetchDevices();\r\n}, [fetchDevices]); // Adiciona 'fetchDevices' como dependência\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dispositivos</h2>\r\n      {devices.length > 0 ? (\r\n        <ul>\r\n          {devices.map((device) => (\r\n            <li key={device._id}>\r\n              <h3>{device.name}</h3>\r\n              <p>{device.type}</p>\r\n              <p>Status: {device.status}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Não há dispositivos registrados.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DevicesPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,gBAAgB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAE;;IAElD,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,6DAA6D,CAAC;MACpEL,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,UAAU,EAAE;QACzCC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAG;QACrC;MACF,CAAC,CAAC;MAEFH,UAAU,CAACO,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAE;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,KAAK,CAAC,6BAA6B,CAAC;MACpCO,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC,CAAE;IACzB;EACF,CAAC;EAEFpB,SAAS,CAAC,MAAM;IACfU,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC,CAAC,CAAC;;EAGlB,oBACEN,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBnB,OAAO,CAACoB,MAAM,GAAG,CAAC,gBACjBvB,OAAA;MAAAkB,QAAA,EACGf,OAAO,CAACqB,GAAG,CAAEC,MAAM,iBAClBzB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAAkB,QAAA,EAAKO,MAAM,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBtB,OAAA;UAAAkB,QAAA,EAAIO,MAAM,CAACE;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBtB,OAAA;UAAAkB,QAAA,GAAG,UAAQ,EAACO,MAAM,CAACG,MAAM;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHvBG,MAAM,CAACI,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELtB,OAAA;MAAAkB,QAAA,EAAG;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAnDQD,WAAW;EAAA,QAEDJ,WAAW;AAAA;AAAAiC,EAAA,GAFrB7B,WAAW;AAqDpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}